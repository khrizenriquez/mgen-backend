"""Initial migration - create all tables

Revision ID: 4a9d440c02ab
Revises: 
Create Date: 2025-09-02 01:02:39.063456

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '4a9d440c02ab'
down_revision = None
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index('idx_donations_statusid_created_at', table_name='donations')
    op.create_index(op.f('ix_donations_id'), 'donations', ['id'], unique=False)
    op.create_index(op.f('ix_donor_contacts_contact_preference'), 'donor_contacts', ['contact_preference'], unique=False)
    op.drop_index('idx_email_logs_donation_id_statusid', table_name='email_logs')
    op.create_index(op.f('ix_email_logs_id'), 'email_logs', ['id'], unique=False)
    op.create_index(op.f('ix_email_logs_type'), 'email_logs', ['type'], unique=False)
    op.alter_column('payment_events', 'payload_raw',
               existing_type=postgresql.JSONB(astext_type=sa.Text()),
               type_=sa.JSON(),
               existing_nullable=False,
               existing_server_default=sa.text("'{}'::jsonb"))
    op.drop_index('idx_payment_events_donation_id_received_at', table_name='payment_events')
    op.drop_constraint('payment_events_event_id_key', 'payment_events', type_='unique')
    op.create_index(op.f('ix_payment_events_event_id'), 'payment_events', ['event_id'], unique=True)
    op.create_index(op.f('ix_payment_events_id'), 'payment_events', ['id'], unique=False)
    op.create_index(op.f('ix_payment_events_source'), 'payment_events', ['source'], unique=False)
    op.alter_column('roles', 'id',
               existing_type=sa.INTEGER(),
               server_default=sa.text('identity()'),
               existing_nullable=False)
    op.drop_constraint('roles_name_key', 'roles', type_='unique')
    op.create_index(op.f('ix_roles_id'), 'roles', ['id'], unique=False)
    op.create_index(op.f('ix_roles_name'), 'roles', ['name'], unique=True)
    op.drop_constraint('status_catalog_code_key', 'status_catalog', type_='unique')
    op.create_index(op.f('ix_status_catalog_code'), 'status_catalog', ['code'], unique=True)
    op.create_index(op.f('ix_status_catalog_id'), 'status_catalog', ['id'], unique=False)
    op.drop_constraint('user_roles_role_id_fkey', 'user_roles', type_='foreignkey')
    op.create_foreign_key(None, 'user_roles', 'roles', ['role_id'], ['id'], ondelete='CASCADE')
    op.drop_constraint('users_email_key', 'users', type_='unique')
    op.drop_index('users_email_lower_uidx', table_name='users')
    op.create_index(op.f('ix_users_email'), 'users', ['email'], unique=True)
    op.create_index(op.f('ix_users_id'), 'users', ['id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_users_id'), table_name='users')
    op.drop_index(op.f('ix_users_email'), table_name='users')
    op.create_index('users_email_lower_uidx', 'users', [sa.text('lower(email)')], unique=False)
    op.create_unique_constraint('users_email_key', 'users', ['email'])
    op.drop_constraint(None, 'user_roles', type_='foreignkey')
    op.create_foreign_key('user_roles_role_id_fkey', 'user_roles', 'roles', ['role_id'], ['id'])
    op.drop_index(op.f('ix_status_catalog_id'), table_name='status_catalog')
    op.drop_index(op.f('ix_status_catalog_code'), table_name='status_catalog')
    op.create_unique_constraint('status_catalog_code_key', 'status_catalog', ['code'])
    op.drop_index(op.f('ix_roles_name'), table_name='roles')
    op.drop_index(op.f('ix_roles_id'), table_name='roles')
    op.create_unique_constraint('roles_name_key', 'roles', ['name'])
    op.alter_column('roles', 'id',
               existing_type=sa.INTEGER(),
               server_default=sa.Identity(always=True, start=1, increment=1, minvalue=1, maxvalue=2147483647, cycle=False, cache=1),
               existing_nullable=False)
    op.drop_index(op.f('ix_payment_events_source'), table_name='payment_events')
    op.drop_index(op.f('ix_payment_events_id'), table_name='payment_events')
    op.drop_index(op.f('ix_payment_events_event_id'), table_name='payment_events')
    op.create_unique_constraint('payment_events_event_id_key', 'payment_events', ['event_id'])
    op.create_index('idx_payment_events_donation_id_received_at', 'payment_events', ['donation_id', 'received_at'], unique=False)
    op.alter_column('payment_events', 'payload_raw',
               existing_type=sa.JSON(),
               type_=postgresql.JSONB(astext_type=sa.Text()),
               existing_nullable=False,
               existing_server_default=sa.text("'{}'::jsonb"))
    op.drop_index(op.f('ix_email_logs_type'), table_name='email_logs')
    op.drop_index(op.f('ix_email_logs_id'), table_name='email_logs')
    op.create_index('idx_email_logs_donation_id_statusid', 'email_logs', ['donation_id', 'status_id'], unique=False)
    op.drop_index(op.f('ix_donor_contacts_contact_preference'), table_name='donor_contacts')
    op.drop_index(op.f('ix_donations_id'), table_name='donations')
    op.create_index('idx_donations_statusid_created_at', 'donations', ['status_id', 'created_at'], unique=False)
    # ### end Alembic commands ###