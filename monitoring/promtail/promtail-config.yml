server:
  http_listen_port: 9080
  grpc_listen_port: 0

positions:
  filename: /tmp/positions.yaml

clients:
  - url: http://loki:3100/loki/api/v1/push

scrape_configs:
  # Scrape logs from Docker containers
  - job_name: containers
    docker_sd_configs:
      - host: unix:///var/run/docker.sock
        refresh_interval: 5s
        filters:
          - name: label
            values: ["logging=promtail"]
    relabel_configs:
      - source_labels: ['__meta_docker_container_name']
        regex: '/(.*)'
        target_label: 'container'
      - source_labels: ['__meta_docker_container_label_com_docker_compose_service']
        target_label: 'service'
      - source_labels: ['__meta_docker_container_label_com_docker_compose_project']
        target_label: 'project'
    pipeline_stages:
      # Parse JSON logs
      - json:
          expressions:
            timestamp: timestamp
            level: level
            service: service
            env: env
            version: version
            request_id: request_id
            method: method
            path: path
            status_code: status_code
            latency_ms: latency_ms
            user_id: user_id
            error_stack: error_stack
            message: message
      # Add labels
      - labels:
          level:
          service:
          env:
          version:
          request_id:
          method:
          path:
          status_code:
      # Set timestamp
      - timestamp:
          source: timestamp
          format: RFC3339
      # Output structured message
      - output:
          source: message

  # Alternative: scrape from log files (backup method)
  - job_name: donations-api-files
    static_configs:
      - targets:
          - localhost
        labels:
          job: donations-api
          service: donations-api
          env: development
          __path__: /var/log/donations/*.log
    pipeline_stages:
      - json:
          expressions:
            timestamp: timestamp
            level: level
            service: service
            env: env
            version: version
            request_id: request_id
            method: method
            path: path
            status_code: status_code
            latency_ms: latency_ms
            user_id: user_id
            error_stack: error_stack
            message: message
      - labels:
          level:
          service:
          env:
          version:
          request_id:
          method:
          path:
          status_code:
      - timestamp:
          source: timestamp
          format: RFC3339
      - output:
          source: message
